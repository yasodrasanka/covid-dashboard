{"ast":null,"code":"var _jsxFileName = \"/home/yasodar/Web_apps/covid-19/covid-dashboard/src/components/Charts/Charts.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Charts.module.css';\n\nconst Charts = ({\n  data,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchApi();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }\n  }) : null;\n  const barChart = data.confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [data.confirmed, data.recovered, data.deaths]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, lineChart);\n};\n\nexport default Charts;","map":{"version":3,"sources":["/home/yasodar/Web_apps/covid-19/covid-dashboard/src/components/Charts/Charts.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Charts","data","country","dailyData","setDailyData","fetchApi","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","barChart","recovered","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAElC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,EAAC,MAAMR,cAAc,EAArB,EAAZ;AACH,KAFD;;AAGAS,IAAAA,QAAQ;AACX,GALQ,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACK,oBAAC,IAAD;AACG,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CACN;AACIV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEG,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADV;AAEIC,QAAAA,KAAK,EAAE,UAFX;AAGIC,QAAAA,WAAW,EAAE,SAHjB;AAIIC,QAAAA,IAAI,EAAE;AAJV,OADM,EAON;AACId,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADV;AAEIH,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAE,KAHjB;AAIIG,QAAAA,eAAe,EAAE,mBAJrB;AAKIF,QAAAA,IAAI,EAAE;AALV,OAPM;AAFR,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,GAqBM,IAtBV;AAyBA,QAAMG,QAAQ,GACVjB,IAAI,CAACW,SAAL,gBACI,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFJ,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CACN;AACIE,QAAAA,KAAK,EAAE,QADX;AAEII,QAAAA,eAAe,EAAE,CAAC,sBAAD,EAAyB,sBAAzB,EAAiD,sBAAjD,CAFrB;AAGIhB,QAAAA,IAAI,EAAE,CAACA,IAAI,CAACW,SAAN,EAAiBX,IAAI,CAACkB,SAAtB,EAAiClB,IAAI,CAACe,MAAtC;AAHV,OADM;AAFR,KADV;AAWI,IAAA,OAAO,EAAE;AACLI,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADH;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBrB,OAAQ;AAAnD;AAFF,KAXb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAiBM,IAlBV;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,SADL,CADJ;AAKH,CA9DD;;AA+DA,eAAeN,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Charts.module.css';\nconst Charts = ({ data, country }) => {\n\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchApi();\n    });\n\n\n    const lineChart = (\n        dailyData.length ?\n            (<Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [\n                        {\n                            data: dailyData.map(({ confirmed }) => confirmed),\n                            label: 'Infected',\n                            borderColor: '#3333ff',\n                            fill: true\n                        },\n                        {\n                            data: dailyData.map(({ deaths }) => deaths),\n                            label: 'Deaths',\n                            borderColor: 'red',\n                            backgroundColor: 'rgba(255,0,0,0.5)',\n                            fill: true\n                        }\n                    ]\n                }}\n            />)\n            : null\n    );\n\n    const barChart = (\n        data.confirmed ?\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [\n                        {\n                            label: 'People',\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                            data: [data.confirmed, data.recovered, data.deaths]\n                        }\n                    ]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current State in ${country}` }\n                }}\n            />\n            : null\n    );\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    );\n}\nexport default Charts;"]},"metadata":{},"sourceType":"module"}